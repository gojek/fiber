// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.2.0
// - protoc             (unknown)
// source: upi/v1/upi.proto

package upiv1

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

// UniversalPredictionServiceClient is the client API for UniversalPredictionService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type UniversalPredictionServiceClient interface {
	PredictValues(ctx context.Context, in *PredictValuesRequest, opts ...grpc.CallOption) (*PredictValuesResponse, error)
}

type universalPredictionServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewUniversalPredictionServiceClient(cc grpc.ClientConnInterface) UniversalPredictionServiceClient {
	return &universalPredictionServiceClient{cc}
}

func (c *universalPredictionServiceClient) PredictValues(ctx context.Context, in *PredictValuesRequest, opts ...grpc.CallOption) (*PredictValuesResponse, error) {
	out := new(PredictValuesResponse)
	err := c.cc.Invoke(ctx, "/upi.v1.UniversalPredictionService/PredictValues", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// UniversalPredictionServiceServer is the server API for UniversalPredictionService service.
// All implementations should embed UnimplementedUniversalPredictionServiceServer
// for forward compatibility
type UniversalPredictionServiceServer interface {
	PredictValues(context.Context, *PredictValuesRequest) (*PredictValuesResponse, error)
}

// UnimplementedUniversalPredictionServiceServer should be embedded to have forward compatible implementations.
type UnimplementedUniversalPredictionServiceServer struct {
}

func (UnimplementedUniversalPredictionServiceServer) PredictValues(context.Context, *PredictValuesRequest) (*PredictValuesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PredictValues not implemented")
}

// UnsafeUniversalPredictionServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to UniversalPredictionServiceServer will
// result in compilation errors.
type UnsafeUniversalPredictionServiceServer interface {
	mustEmbedUnimplementedUniversalPredictionServiceServer()
}

func RegisterUniversalPredictionServiceServer(s grpc.ServiceRegistrar, srv UniversalPredictionServiceServer) {
	s.RegisterService(&UniversalPredictionService_ServiceDesc, srv)
}

func _UniversalPredictionService_PredictValues_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PredictValuesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UniversalPredictionServiceServer).PredictValues(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/upi.v1.UniversalPredictionService/PredictValues",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UniversalPredictionServiceServer).PredictValues(ctx, req.(*PredictValuesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// UniversalPredictionService_ServiceDesc is the grpc.ServiceDesc for UniversalPredictionService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var UniversalPredictionService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "upi.v1.UniversalPredictionService",
	HandlerType: (*UniversalPredictionServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "PredictValues",
			Handler:    _UniversalPredictionService_PredictValues_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "upi/v1/upi.proto",
}
